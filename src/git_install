#!/usr/bin/env bash

function log_core() {
  local prefex="$1"
  shift
  echo "[$(date '+%Y-%m-%d %H:%M:%S')]][$prefex]" "$@"
}

function log() {
  log_core INFO "$@"
}

function assert() {
  if [ $1 -ne 0 ]; then
    log_core ERROR "$@"
    return "$1"
  fi
}

function get_yes_no() {
  if [ $SHELL_IS_INTERACTIVE -eq 0 ]; then
    export REPLY="y"
    return 0
  fi
  while true; do
    read -p "$LOG_PREFEX$1 [y/n]: " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[YyNn]$ ]]; then
      log "Input invalid: you must specify y or n."
    else
      break
    fi
  done

  export REPLY
}

: "${ZLIB_BRANCH:="master"}"
: "${ZLIB_LOCATION:="$HOME/.zlib_bash_config"}"

while [ "$#" -gt 0 ]; do
  case $1 in
  -h | --help)
    echo "
Installs the zlib-bash-config, by cloning the repo:
ARGS:
  --branch | -b   The branch to clone from (defaults to master)
  --location | -l The folder to install to (defaults to $ZLIB_LOCATION)
"
    ;;
  -b | --branch)
    shift
    ZLIB_BRANCH="$1"
    ;;
  --location | -l)
    shift
    ZLIB_LOCATION="$1"
    ;;
  -*)
    assert 2 "Unknown option $1" || exit $?
    ;;
  *)
    assert 2 "Unsupported input $1" || exit $?
    ;;
  esac
  shift
done

# check for oh_my_bash
if [ -d "$ZLIB_LOCATION" ]; then
  get_yes_no "The location $ZLIB_LOCATION exist, would you like to overwrite (all will be deleted)? [y/n] "
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    log "Aborted"
    exit 0
  fi
  rm -Rf "$ZLIB_LOCATION"
  assert $? "Failed to remove existing location" || exit $?
fi

type git &>/dev/null
assert $? "Git must be installed" || exit $?

git clone "https://github.com/LamaAni/zlib-bash-config.git" "$ZLIB_LOCATION" --branch "$ZLIB_BRANCH"
assert $? "Failed to clone repository" || exit $?

"$ZLIB_LOCATION/src/install"
assert $? "Failed to install" || exit $?
